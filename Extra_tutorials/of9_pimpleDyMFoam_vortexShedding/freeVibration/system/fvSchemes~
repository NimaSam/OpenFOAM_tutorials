/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
    grad(p)         Gauss linear;
    grad(U)         Gauss linear;
}

divSchemes
{
    default                  none;
    div(phi,U)               Gauss limitedLinear 1.0;

    div(phi,taufirst)          Gauss upwind;
    div(phi,tausecond)         Gauss upwind;
    div(phi,tauthird)          Gauss upwind;
    div(phi,taufourth)         Gauss upwind;
    div(phi,tau)	       Gauss upwind;

    div(tau)                 Gauss linear;
}

laplacianSchemes
{
    default                      none;
    laplacian(etaPEff,U)         Gauss linear corrected;
    laplacian(etaPEff+etaS,U)    Gauss linear corrected;
    laplacian((1|A(U)),p)        Gauss linear corrected;
    laplacian(diffusivity,cellDisplacement) Gauss linear corrected;
    laplacian(rAU,p)  Gauss linear corrected;
    laplacian(nu,U)   Gauss linear corrected;
     laplacian(rAU,pcorr) Gauss linear corrected;
}

interpolationSchemes
{
    default           linear;
    interpolate(HbyA) linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p;
    pcorr ;
}

// ************************************************************************* //
