/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (-20.6 0 0)
    (-20.6 2 0)
    (-20.6 12.7 0)
    (-20.6 25.4 0)
    (0 -25.4 0)
    (0 -4 0)
    (0 0 0)
    (0 2 0)
    (0 12.7 0)
    (0 25.4 0)
    (206 -25.4 0)
    (206 -8.5 0)
    (206 0 0)
    (206 8.5 0)
    (206 17 0)
    (206 25.4 0)
    (290 -16.6 0)
    (290 -8.3 0)
    (290 0 0)
    (290 5.5 0)
    (290 11 0)
    (290 16.6 0)
    (-20.6 0 38.1)
    (-20.6 2 38.1)
    (-20.6 12.7 38.1)
    (-20.6 25.4 38.1)
    (0 -25.4 38.1)
    (0 -4 38.1)
    (0 0 38.1)
    (0 2 38.1)
    (0 12.7 38.1)
    (0 25.4 38.1)
    (206 -25.4 38.1)
    (206 -8.5 38.1)
    (206 0 38.1)
    (206 8.5 38.1)
    (206 17 38.1)
    (206 25.4 38.1)
    (290 -16.6 38.1)
    (290 -8.3 38.1)
    (290 0 38.1)
    (290 5.5 38.1)
    (290 11 38.1)
    (290 16.6 38.1)
);

blocks
(
    hex (0 6 7 1 22 28 29 23) (18 7 20) simpleGrading (1 1 1)
    hex (1 7 8 2 23 29 30 24) (18 10 20) simpleGrading (1 4 1)
    hex (2 8 9 3 24 30 31 25) (18 13 20) simpleGrading (1 0.25 1)
    hex (4 10 11 5 26 32 33 27) (180 18 20) simpleGrading (2 1 1)
    hex (5 11 12 6 27 33 34 28) (180 9 20) simpleGrading (2 1 1)
    hex (6 12 13 7 28 34 35 29) (180 7 20) simpleGrading (2 1 1)
    hex (7 13 14 8 29 35 36 30) (180 10 20) simpleGrading (2 4 1)
    hex (8 14 15 9 30 36 37 31) (180 13 20) simpleGrading (2 0.25 1)
    hex (10 16 17 11 32 38 39 33) (25 18 20) simpleGrading (1 1 1)
    hex (11 17 18 12 33 39 40 34) (25 9 20) simpleGrading (1 1 1)
    hex (12 18 19 13 34 40 41 35) (25 7 20) simpleGrading (1 1 1)
    hex (13 19 20 14 35 41 42 36) (25 10 20) simpleGrading (1 4 1)
    hex (14 20 21 15 36 42 43 37) (25 13 20) simpleGrading (1 0.25 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 22 23 1)
            (1 23 24 2)
            (2 24 25 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (16 17 39 38)
            (17 18 40 39)
            (18 19 41 40)
            (19 20 42 41)
            (20 21 43 42)
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (3 25 31 9)
            (9 31 37 15)
            (15 37 43 21)
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (0 6 28 22)
            (6 5 27 28)
            (5 4 26 27)
            (4 10 32 26)
            (10 16 38 32)
        );
    }
    front
    {
        type cyclic;
        neighbourPatch back;
        faces
        (
            (22 28 29 23)
            (23 29 30 24)
            (24 30 31 25)
            (26 32 33 27)
            (27 33 34 28)
            (28 34 35 29)
            (29 35 36 30)
            (30 36 37 31)
            (32 38 39 33)
            (33 39 40 34)
            (34 40 41 35)
            (35 41 42 36)
            (36 42 43 37)
            );
    }
    back
    {
        type cyclic;
        neighbourPatch front;
        faces
        (
            (0 1 7 6)
            (1 2 8 7)
            (2 3 9 8)
            (4 5 11 10)
            (5 6 12 11)
            (6 7 13 12)
            (7 8 14 13)
            (8 9 15 14)
            (10 11 17 16)
            (11 12 18 17)
            (12 13 19 18)
            (13 14 20 19)
            (14 15 21 20)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
