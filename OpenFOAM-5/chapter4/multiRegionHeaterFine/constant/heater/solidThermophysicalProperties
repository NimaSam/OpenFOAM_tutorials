/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      solidThermophysicalProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

thermoType constSolidThermo;
//thermoType isotropicKSolidThermo;
//thermoType directionalKSolidThermo;
//thermoType solidMixtureThermo<multiComponentSolidMixture<exponentialSolidTransport<constSolidRad<exponentialSolidThermo<constRho>>>>>;


constSolidThermoCoeffs
{
    //- thermo properties
    rho rho [1 -3  0  0 0 0 0] 19300;
    Cp  Cp  [0  2 -2 -1 0 0 0] 130;
    K   K   [1  1 -3 -1 0 0 0] 100;

    //- radiation properties
    kappa kappa [0 -1 0 0 0 0 0]            0;
    sigmaS sigmaS [0 -1 0 0 0 0 0]          0;
    emissivity  emissivity  [0 0 0 0 0 0 0] 1;

    //- chemical properties
    Hf  Hf  [0  2 -2  0 0 0 0] 1;
}


isotropicKSolidThermoCoeffs
{
    //- thermo properties
    TValues             (100 1000);
    rhoValues           (1000 1700);
    cpValues            (1700 1700);
    KValues             (80 40);

    //- radiation properties
    emissivityValues    (1 1);
    kappaValues         (0 0);
    sigmaSValues        (0 0);

    //- chemical properties
    HfValues            (1 1);
}


directionalKSolidThermoCoeffs
{
    //- does interpolation and directional K in coordinate system.
    //  Specify multiple values, one for each temperature. Properties are
    //  interpolated according to the local temperature.

    //- thermo properties
    TValues             (100 1000);
    rhoValues           (1700 1700);
    cpValues            (1700 1700);
    KValues             ((10 10 10) (40 40 40));

    coordinateSystem
    {
        origin  (-0.000062 0.000019 0.000039);
        coordinateRotation
        {
            type    axes;
            e1      (1 0 0);
            e3      (-3.1807824e-6 -0.99813473 0.0610505);
        }
    }

    //- chemical properties
    HfValues            (1 1);

    //- radiation properties
    emissivityValues    (1 1);
    kappaValues         (1 1);
    sigmaSValues         (1 1);
}

solidComponents
(
    pmma char
);

pmmaCoeffs
{
    transport
    {
        K0      0.152;
        n0      1.3;
        Tref    300; //K0*pow(T/Tref_, n0))
    }

    radiation
    {
        sigmaS      0.0;
        kappa       0.0;
        emissivity  0.1;
    }

    thermodynamics
    {
        Hf      0;
        C0      1462; // Cp = C0*(T/Tref)^n0
        Tref    300;
        n0      1.31;
    }

    density
    {
        rho     1114.0;
    }
}

charCoeffs
{
    transport
    {
        K0      0.4;
        n0      1.3;
        Tref    300; //K0*pow(T/Tref_, n0))
    }

    radiation
    {
        sigmaS      0.0;
        kappa       0.0;
        emissivity  0.0;
    }

    thermodynamics
    {
        Hf      0;
        C0      611.0; // Cp = C0*(T/Tref)^n0
        Tref    300;
        n0      1.31;
    }

    density
    {
        rho     11.5;
    }
}

// ************************************************************************* //
